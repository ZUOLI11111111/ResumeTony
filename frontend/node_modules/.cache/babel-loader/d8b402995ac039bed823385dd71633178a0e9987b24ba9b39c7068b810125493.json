{"ast":null,"code":"var _jsxFileName = \"/home/m/resume_revision/frontend/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResumeUpload.css';\n\n// 创建支持大数据的axios实例\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_PYTHON_API_URL || 'http://localhost:5000/api',\n  // 使用环境变量\n  timeout: 600000,\n  // 增加超时时间到60秒\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  },\n  maxContentLength: Infinity,\n  // 允许无限大小的内容\n  maxBodyLength: Infinity // 允许无限大小的请求体\n});\n\n// 设置后端API的基础URL，确保一致性\nconst BACKEND_BASE_URL = process.env.REACT_APP_PYTHON_API_URL ? process.env.REACT_APP_PYTHON_API_URL.replace('/api', '') : 'http://localhost:5000';\nfunction ResumeUpload({\n  languages,\n  apiUrl,\n  onViewHistory\n}) {\n  _s();\n  const [resumeText, setResumeText] = useState('');\n  const [modificationRequirements, setModificationRequirements] = useState('');\n  const [modifiedResume, setModifiedResume] = useState('');\n  const [isModifying, setIsModifying] = useState(false);\n  const [sourceLanguage, setSourceLanguage] = useState('zh'); // 修改为代码值而不是显示值\n  const [targetLanguage, setTargetLanguage] = useState('zh'); // 修改为代码值而不是显示值\n  const [success, setSuccess] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const [classifyingStatus, setClassifyingStatus] = useState(''); // 添加分类状态变量\n  const [error, setError] = useState(''); // 添加错误状态\n  const [connectionStatus, setConnectionStatus] = useState('未连接'); // 添加SSE连接状态变量\n\n  // 添加调试钩子，跟踪状态变化\n  useEffect(() => {\n    console.log(\"状态变量 classifyingStatus 更新:\", classifyingStatus);\n  }, [classifyingStatus]);\n  useEffect(() => {\n    console.log(\"状态变量 error 更新:\", error);\n  }, [error]);\n  useEffect(() => {\n    console.log(\"状态变量 success 更新:\", success);\n  }, [success]);\n  useEffect(() => {\n    console.log(\"状态变量 connectionStatus 更新:\", connectionStatus);\n  }, [connectionStatus]);\n  const handleTextChange = e => {\n    setResumeText(e.target.value);\n  };\n  const handleRequirementsChange = e => {\n    setModificationRequirements(e.target.value);\n  };\n  async function handleTextOutput() {\n    setIsModifying(true);\n    setModifiedResume(\"\"); // 清空之前的结果\n    setSuccess(\"\"); // 清空成功消息\n    setClassifyingStatus(\"\");\n    setError(\"\"); // 清空错误消息\n\n    try {\n      console.log(\"正在初始化简历处理...\");\n      console.log(\"发送数据:\", {\n        resume_text: resumeText.substring(0, 50) + \"...\",\n        requirements: modificationRequirements,\n        source_language: sourceLanguage,\n        target_language: targetLanguage\n      });\n\n      // 第一步：发送初始化请求，获取会话ID\n      const initResponse = await api.post('/initialize_resume', {\n        resume_text: resumeText,\n        requirements: modificationRequirements,\n        source_language: sourceLanguage,\n        target_language: targetLanguage\n      });\n      console.log(\"初始化响应:\", initResponse);\n      if (!initResponse.data || initResponse.data.status !== 'success') {\n        var _initResponse$data;\n        throw new Error('初始化失败: ' + (((_initResponse$data = initResponse.data) === null || _initResponse$data === void 0 ? void 0 : _initResponse$data.message) || '未知错误'));\n      }\n      const sessionId = initResponse.data.session_id;\n      console.log(\"获取到会话ID:\", sessionId);\n\n      // 第二步：使用会话ID建立SSE连接\n      const sseUrl = `${BACKEND_BASE_URL}/api/modify_resume?session_id=${sessionId}`;\n      console.log(\"建立SSE连接:\", sseUrl);\n      const eventSource = new EventSource(sseUrl);\n      console.log(\"EventSource对象已创建:\", eventSource);\n\n      // 设置超时保护\n      const timeout = setTimeout(() => {\n        console.log(\"请求超时，关闭连接\");\n        eventSource.close();\n        setClassifyingStatus(\"\");\n        setError(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n        setIsModifying(false);\n      }, 3000000); // 5分钟超时\n\n      // 处理连接打开\n      eventSource.onopen = event => {\n        console.log(\"SSE连接已打开:\", event);\n        setConnectionStatus('已连接');\n        setClassifyingStatus(\"连接已建立，等待处理...\");\n      };\n\n      // 处理开始事件\n      eventSource.addEventListener('start', event => {\n        console.log(\"收到start事件:\", event.data);\n        setConnectionStatus('处理中');\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的start数据:\", data);\n          setSourceLanguage(data.sourceLanguage || 'zh');\n          setTargetLanguage(data.targetLanguage || 'zh');\n        } catch (e) {\n          console.error(\"解析start事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理进度更新\n      eventSource.addEventListener('progress', event => {\n        console.log(\"收到progress事件:\", event.data);\n        setConnectionStatus('接收数据');\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的progress数据:\", data);\n          setClassifyingStatus(data.text);\n        } catch (e) {\n          console.error(\"解析progress事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理更新事件\n      eventSource.addEventListener('update', event => {\n        console.log(\"收到update事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的update数据:\", data);\n          setModifiedResume(data.text);\n        } catch (e) {\n          console.error(\"解析update事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理分类完成事件\n      eventSource.addEventListener('classified', event => {\n        console.log(\"收到classified事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的classified数据:\", data);\n          setClassifyingStatus(\"简历分类完成，开始具体分类...\");\n        } catch (e) {\n          console.error(\"解析classified事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理详细分类完成事件\n      eventSource.addEventListener('detail_classified', event => {\n        console.log(\"收到detail_classified事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的detail_classified数据:\", data);\n          setClassifyingStatus(\"具体分类完成，开始修改...\");\n        } catch (e) {\n          console.error(\"解析detail_classified事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理修改完成事件\n      eventSource.addEventListener('modified', event => {\n        console.log(\"收到modified事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的modified数据:\", data);\n          setModifiedResume(data.text);\n          setClassifyingStatus(\"简历修改完成，正在优化格式...\");\n        } catch (e) {\n          console.error(\"解析modified事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理格式更新事件\n      eventSource.addEventListener('format_update', event => {\n        console.log(\"收到format_update事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的format_update数据:\", data);\n          setModifiedResume(data.text);\n        } catch (e) {\n          console.error(\"解析format_update事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理最终结果事件\n      eventSource.addEventListener('final', event => {\n        console.log(\"收到final事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的final数据:\", data);\n          setModifiedResume(data.text);\n          setClassifyingStatus(\"\");\n\n          // 自动保存到数据库\n          saveResultToDatabase(resumeText, data.text, modificationRequirements);\n        } catch (e) {\n          console.error(\"解析final事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理成功事件\n      eventSource.addEventListener('success', event => {\n        console.log(\"收到success事件:\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的success数据:\", data);\n          setSuccess(data.text);\n          clearTimeout(timeout);\n          eventSource.close();\n          setIsModifying(false);\n        } catch (e) {\n          console.error(\"解析success事件数据失败:\", e, event.data);\n        }\n      });\n\n      // 处理错误事件\n      eventSource.addEventListener('error', event => {\n        console.error(\"SSE错误事件:\", event);\n        if (event.data) {\n          try {\n            const data = JSON.parse(event.data);\n            console.error(\"解析后的错误数据:\", data);\n            setError(`服务器错误: ${data.text}`);\n          } catch (e) {\n            console.error(\"解析错误事件数据失败:\", e, event.data);\n            setError(\"服务器错误，无法解析错误信息\");\n          }\n        } else {\n          setError(\"与服务器连接出现问题\");\n        }\n        clearTimeout(timeout);\n        eventSource.close();\n        setIsModifying(false);\n      });\n\n      // 处理默认消息 (onmessage)\n      eventSource.onmessage = event => {\n        console.log(\"收到默认消息事件 (onmessage):\", event.data);\n        try {\n          const data = JSON.parse(event.data);\n          console.log(\"解析后的默认消息数据:\", data);\n          setClassifyingStatus(\"收到服务器消息: \" + (data.text || JSON.stringify(data)));\n        } catch (e) {\n          console.error(\"解析默认消息事件数据失败:\", e, event.data);\n          setClassifyingStatus(\"收到服务器消息(无法解析): \" + event.data);\n        }\n      };\n\n      // 处理EventSource本身的错误\n      eventSource.onerror = error => {\n        console.error(\"EventSource错误:\", error);\n        clearTimeout(timeout);\n        eventSource.close();\n        setClassifyingStatus(\"\");\n        setError(\"连接错误，请确认后端服务运行正常。\");\n        setIsModifying(false);\n      };\n    } catch (error) {\n      console.error(\"请求失败:\", error);\n      if (error.name === 'AbortError') {\n        setError(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n      } else if (error.message.includes('Failed to fetch') || error.message.includes('network')) {\n        setError(\"网络连接错误。请确认Python后端服务(端口5000)已启动并且可访问。\");\n      } else {\n        setError(\"修改过程中出现错误：\" + error.message);\n      }\n      setClassifyingStatus(\"\");\n      setIsModifying(false);\n    }\n  }\n\n  // 保存结果到数据库\n  const saveResultToDatabase = async (originalContent, modifiedContent, description) => {\n    try {\n      setIsSaving(true);\n      console.log('开始保存简历修改结果到数据库...');\n      console.log('原始内容长度:', originalContent.length);\n      console.log('修改后内容长度:', modifiedContent.length);\n      const response = await api.post('/resume', {\n        originalContent: originalContent,\n        modifiedContent: modifiedContent,\n        modificationDescription: description || '',\n        userId: 'user123',\n        // 可以从用户登录信息中获取\n        status: 1 // 1表示已完成\n      });\n      console.log('保存响应:', response);\n      if (response.data && response.data.success) {\n        setSuccess(prev => prev + \" 已保存到历史记录！\");\n        console.log('保存成功，ID:', response.data.data.id);\n      } else {\n        console.error('保存失败:', response.data);\n        setError(prev => prev + \" 保存到历史记录失败！\");\n      }\n    } catch (error) {\n      console.error('保存到数据库出错:', error);\n      setError(prev => prev + \" 保存到数据库出错：\" + error.message);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resume-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"\\u539F\\u59CB\\u7B80\\u5386\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-right-language-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: sourceLanguage,\n              onChange: e => setSourceLanguage(e.target.value),\n              className: \"language-select-corner\",\n              children: Object.entries(languages).map(([k, v]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: k,\n                children: v\n              }, `source-${k}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: targetLanguage,\n              onChange: e => setTargetLanguage(e.target.value),\n              className: \"language-select-corner\",\n              children: Object.entries(languages).map(([k, v]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: k,\n                children: v\n              }, `target-${k}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requirements-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"modification-requirements\",\n            className: \"requirements-label\",\n            children: \"\\u4FEE\\u6539\\u8981\\u6C42\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"modification-requirements\",\n            className: \"requirements-input\",\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u60A8\\u5BF9\\u7B80\\u5386\\u4FEE\\u6539\\u7684\\u5177\\u4F53\\u8981\\u6C42...\",\n            value: modificationRequirements,\n            onChange: handleRequirementsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input-area\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"resume-text-input\",\n            placeholder: \"\\u8BF7\\u5728\\u6B64\\u7C98\\u8D34\\u60A8\\u7684\\u7B80\\u5386\\u6587\\u672C...\",\n            value: resumeText,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleTextOutput,\n          disabled: isModifying || !resumeText.trim(),\n          children: isModifying ? '修改中...' : '开始修改'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"history-button\",\n          onClick: onViewHistory,\n          children: \"\\u67E5\\u770B\\u5386\\u53F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\u4FEE\\u6539\\u540E\\u7684\\u7B80\\u5386\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-icon\",\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), \" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 25\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), \" \", success, isSaving && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"saving-indicator\",\n            children: \" (\\u4FDD\\u5B58\\u4E2D...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this), classifyingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classifying-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"classifying-icon\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this), \" \", classifyingStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-output-area\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"resume-text-output\",\n            placeholder: \"\\u4FEE\\u6539\\u540E\\u7684\\u7B80\\u5386\\u5C06\\u663E\\u793A\\u5728\\u8FD9\\u91CC\",\n            value: modifiedResume,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 9\n  }, this);\n}\n_s(ResumeUpload, \"oCTZjj/UL8ODCbs8f2NFFKnv7gk=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","api","create","baseURL","process","env","REACT_APP_PYTHON_API_URL","timeout","withCredentials","headers","maxContentLength","Infinity","maxBodyLength","BACKEND_BASE_URL","replace","ResumeUpload","languages","apiUrl","onViewHistory","_s","resumeText","setResumeText","modificationRequirements","setModificationRequirements","modifiedResume","setModifiedResume","isModifying","setIsModifying","sourceLanguage","setSourceLanguage","targetLanguage","setTargetLanguage","success","setSuccess","isSaving","setIsSaving","classifyingStatus","setClassifyingStatus","error","setError","connectionStatus","setConnectionStatus","console","log","handleTextChange","e","target","value","handleRequirementsChange","handleTextOutput","resume_text","substring","requirements","source_language","target_language","initResponse","post","data","status","_initResponse$data","Error","message","sessionId","session_id","sseUrl","eventSource","EventSource","setTimeout","close","onopen","event","addEventListener","JSON","parse","text","saveResultToDatabase","clearTimeout","onmessage","stringify","onerror","name","includes","originalContent","modifiedContent","description","length","response","modificationDescription","userId","prev","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","entries","map","k","v","htmlFor","placeholder","onClick","disabled","trim","readOnly","_c","$RefreshReg$"],"sources":["/home/m/resume_revision/frontend/src/components/ResumeUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResumeUpload.css';\n\n// 创建支持大数据的axios实例\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_PYTHON_API_URL || 'http://localhost:5000/api',  // 使用环境变量\n    timeout: 600000, // 增加超时时间到60秒\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n    },\n    maxContentLength: Infinity, // 允许无限大小的内容\n    maxBodyLength: Infinity // 允许无限大小的请求体\n});\n\n// 设置后端API的基础URL，确保一致性\nconst BACKEND_BASE_URL = process.env.REACT_APP_PYTHON_API_URL ? process.env.REACT_APP_PYTHON_API_URL.replace('/api', '') : 'http://localhost:5000';\n\nfunction ResumeUpload({ languages, apiUrl, onViewHistory }) {\n    const [resumeText, setResumeText] = useState('');\n    const [modificationRequirements, setModificationRequirements] = useState('');\n    const [modifiedResume, setModifiedResume] = useState('');\n    const [isModifying, setIsModifying] = useState(false);\n    const [sourceLanguage, setSourceLanguage] = useState('zh');  // 修改为代码值而不是显示值\n    const [targetLanguage, setTargetLanguage] = useState('zh');  // 修改为代码值而不是显示值\n    const [success, setSuccess] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n    const [classifyingStatus, setClassifyingStatus] = useState(''); // 添加分类状态变量\n    const [error, setError] = useState(''); // 添加错误状态\n    const [connectionStatus, setConnectionStatus] = useState('未连接'); // 添加SSE连接状态变量\n    \n    // 添加调试钩子，跟踪状态变化\n    useEffect(() => {\n        console.log(\"状态变量 classifyingStatus 更新:\", classifyingStatus);\n    }, [classifyingStatus]);\n    \n    useEffect(() => {\n        console.log(\"状态变量 error 更新:\", error);\n    }, [error]);\n    \n    useEffect(() => {\n        console.log(\"状态变量 success 更新:\", success);\n    }, [success]);\n    \n    useEffect(() => {\n        console.log(\"状态变量 connectionStatus 更新:\", connectionStatus);\n    }, [connectionStatus]);\n    \n    const handleTextChange = (e) => {\n        setResumeText(e.target.value);\n    };\n    \n    const handleRequirementsChange = (e) => {\n        setModificationRequirements(e.target.value);\n    };\n    \n    async function handleTextOutput() {\n        setIsModifying(true);\n        setModifiedResume(\"\"); // 清空之前的结果\n        setSuccess(\"\"); // 清空成功消息\n        setClassifyingStatus(\"\"); \n        setError(\"\"); // 清空错误消息\n        \n        try {\n            console.log(\"正在初始化简历处理...\");\n            console.log(\"发送数据:\", {\n                resume_text: resumeText.substring(0, 50) + \"...\",\n                requirements: modificationRequirements,\n                source_language: sourceLanguage,\n                target_language: targetLanguage\n            });\n            \n            // 第一步：发送初始化请求，获取会话ID\n            const initResponse = await api.post('/initialize_resume', {\n                resume_text: resumeText,\n                requirements: modificationRequirements,\n                source_language: sourceLanguage,\n                target_language: targetLanguage\n            });\n            \n            console.log(\"初始化响应:\", initResponse);\n            \n            if (!initResponse.data || initResponse.data.status !== 'success') {\n                throw new Error('初始化失败: ' + (initResponse.data?.message || '未知错误'));\n            }\n            \n            const sessionId = initResponse.data.session_id;\n            console.log(\"获取到会话ID:\", sessionId);\n            \n            // 第二步：使用会话ID建立SSE连接\n            const sseUrl = `${BACKEND_BASE_URL}/api/modify_resume?session_id=${sessionId}`;\n            console.log(\"建立SSE连接:\", sseUrl);\n            \n            const eventSource = new EventSource(sseUrl);\n            console.log(\"EventSource对象已创建:\", eventSource);\n            \n            // 设置超时保护\n            const timeout = setTimeout(() => {\n                console.log(\"请求超时，关闭连接\");\n                eventSource.close();\n                setClassifyingStatus(\"\");\n                setError(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n                setIsModifying(false);\n            }, 3000000); // 5分钟超时\n            \n            // 处理连接打开\n            eventSource.onopen = (event) => {\n                console.log(\"SSE连接已打开:\", event);\n                setConnectionStatus('已连接');\n                setClassifyingStatus(\"连接已建立，等待处理...\");\n            };\n            \n            // 处理开始事件\n            eventSource.addEventListener('start', (event) => {\n                console.log(\"收到start事件:\", event.data);\n                setConnectionStatus('处理中');\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的start数据:\", data);\n                    setSourceLanguage(data.sourceLanguage || 'zh');\n                    setTargetLanguage(data.targetLanguage || 'zh');\n                } catch (e) {\n                    console.error(\"解析start事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理进度更新\n            eventSource.addEventListener('progress', (event) => {\n                console.log(\"收到progress事件:\", event.data);\n                setConnectionStatus('接收数据');\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的progress数据:\", data);\n                    setClassifyingStatus(data.text);\n                } catch (e) {\n                    console.error(\"解析progress事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理更新事件\n            eventSource.addEventListener('update', (event) => {\n                console.log(\"收到update事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的update数据:\", data);\n                    setModifiedResume(data.text);\n                } catch (e) {\n                    console.error(\"解析update事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理分类完成事件\n            eventSource.addEventListener('classified', (event) => {\n                console.log(\"收到classified事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的classified数据:\", data);\n                    setClassifyingStatus(\"简历分类完成，开始具体分类...\");\n                } catch (e) {\n                    console.error(\"解析classified事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理详细分类完成事件\n            eventSource.addEventListener('detail_classified', (event) => {\n                console.log(\"收到detail_classified事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的detail_classified数据:\", data);\n                    setClassifyingStatus(\"具体分类完成，开始修改...\");\n                } catch (e) {\n                    console.error(\"解析detail_classified事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理修改完成事件\n            eventSource.addEventListener('modified', (event) => {\n                console.log(\"收到modified事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的modified数据:\", data);\n                    setModifiedResume(data.text);\n                    setClassifyingStatus(\"简历修改完成，正在优化格式...\");\n                } catch (e) {\n                    console.error(\"解析modified事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理格式更新事件\n            eventSource.addEventListener('format_update', (event) => {\n                console.log(\"收到format_update事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的format_update数据:\", data);\n                    setModifiedResume(data.text);\n                } catch (e) {\n                    console.error(\"解析format_update事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理最终结果事件\n            eventSource.addEventListener('final', (event) => {\n                console.log(\"收到final事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的final数据:\", data);\n                    setModifiedResume(data.text);\n                    setClassifyingStatus(\"\");\n                    \n                    // 自动保存到数据库\n                    saveResultToDatabase(resumeText, data.text, modificationRequirements);\n                } catch (e) {\n                    console.error(\"解析final事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理成功事件\n            eventSource.addEventListener('success', (event) => {\n                console.log(\"收到success事件:\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的success数据:\", data);\n                    setSuccess(data.text);\n                    clearTimeout(timeout);\n                    eventSource.close();\n                    setIsModifying(false);\n                } catch (e) {\n                    console.error(\"解析success事件数据失败:\", e, event.data);\n                }\n            });\n            \n            // 处理错误事件\n            eventSource.addEventListener('error', (event) => {\n                console.error(\"SSE错误事件:\", event);\n                \n                if (event.data) {\n                    try {\n                        const data = JSON.parse(event.data);\n                        console.error(\"解析后的错误数据:\", data);\n                        setError(`服务器错误: ${data.text}`);\n                    } catch (e) {\n                        console.error(\"解析错误事件数据失败:\", e, event.data);\n                        setError(\"服务器错误，无法解析错误信息\");\n                    }\n                } else {\n                    setError(\"与服务器连接出现问题\");\n                }\n                \n                clearTimeout(timeout);\n                eventSource.close();\n                setIsModifying(false);\n            });\n            \n            // 处理默认消息 (onmessage)\n            eventSource.onmessage = (event) => {\n                console.log(\"收到默认消息事件 (onmessage):\", event.data);\n                try {\n                    const data = JSON.parse(event.data);\n                    console.log(\"解析后的默认消息数据:\", data);\n                    setClassifyingStatus(\"收到服务器消息: \" + (data.text || JSON.stringify(data)));\n                } catch (e) {\n                    console.error(\"解析默认消息事件数据失败:\", e, event.data);\n                    setClassifyingStatus(\"收到服务器消息(无法解析): \" + event.data);\n                }\n            };\n            \n            // 处理EventSource本身的错误\n            eventSource.onerror = (error) => {\n                console.error(\"EventSource错误:\", error);\n                clearTimeout(timeout);\n                eventSource.close();\n                setClassifyingStatus(\"\");\n                setError(\"连接错误，请确认后端服务运行正常。\");\n                setIsModifying(false);\n            };\n            \n        } catch (error) {\n            console.error(\"请求失败:\", error);\n            \n            if (error.name === 'AbortError') {\n                setError(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n            } else if (error.message.includes('Failed to fetch') || error.message.includes('network')) {\n                setError(\"网络连接错误。请确认Python后端服务(端口5000)已启动并且可访问。\");\n            } else {\n                setError(\"修改过程中出现错误：\" + error.message);\n            }\n            \n            setClassifyingStatus(\"\");\n            setIsModifying(false);\n        }\n    }\n\n    // 保存结果到数据库\n    const saveResultToDatabase = async (originalContent, modifiedContent, description) => {\n        try {\n            setIsSaving(true);\n            console.log('开始保存简历修改结果到数据库...');\n            console.log('原始内容长度:', originalContent.length);\n            console.log('修改后内容长度:', modifiedContent.length);\n            \n            const response = await api.post('/resume', {\n                originalContent: originalContent,\n                modifiedContent: modifiedContent,\n                modificationDescription: description || '',\n                userId: 'user123', // 可以从用户登录信息中获取\n                status: 1 // 1表示已完成\n            });\n            \n            console.log('保存响应:', response);\n            \n            if (response.data && response.data.success) {\n                setSuccess(prev => prev + \" 已保存到历史记录！\");\n                console.log('保存成功，ID:', response.data.data.id);\n            } else {\n                console.error('保存失败:', response.data);\n                setError(prev => prev + \" 保存到历史记录失败！\");\n            }\n        } catch (error) {\n            console.error('保存到数据库出错:', error);\n            setError(prev => prev + \" 保存到数据库出错：\" + error.message);\n        } finally {\n            setIsSaving(false);\n        }\n    };\n    \n    return (\n        <div className=\"resume-upload\">\n            <div className=\"split-container\">\n                {/* 左侧输入区域 */}\n                <div className=\"input-section\">\n                    {/* 添加相对定位容器 */}\n                    <div className=\"section-header\">\n                        <h3 className=\"section-title\">原始简历</h3>\n                        \n                        {/* 右上角语言选择器和转换箭头 */}\n                        <div className=\"top-right-language-selector\">\n                            {/* 源语言选择器 */}\n                            <select \n                                value={sourceLanguage} \n                                onChange={(e) => setSourceLanguage(e.target.value)}\n                                className=\"language-select-corner\"\n                            >\n                                {Object.entries(languages)\n                                    .map(([k, v]) => (\n                                        <option key={`source-${k}`} value={k}>{v}</option>\n                                    ))\n                                }\n                            </select>\n                            \n                            {/* 转换箭头 */}\n                            <div className=\"language-arrow\">→</div>\n                            \n                            {/* 目标语言选择器 */}\n                            <select \n                                value={targetLanguage} \n                                onChange={(e) => setTargetLanguage(e.target.value)}\n                                className=\"language-select-corner\"\n                            >\n                                {Object.entries(languages)\n                                    .map(([k, v]) => (\n                                        <option key={`target-${k}`} value={k}>{v}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    \n                    {/* 修改要求输入框 */}\n                    <div className=\"requirements-container\">\n                        <label htmlFor=\"modification-requirements\" className=\"requirements-label\">修改要求：</label>\n                        <textarea \n                            id=\"modification-requirements\"\n                            className=\"requirements-input\"\n                            placeholder=\"请输入您对简历修改的具体要求...\"\n                            value={modificationRequirements}\n                            onChange={handleRequirementsChange}\n                        ></textarea>\n                    </div>\n                    \n                    <div className=\"text-input-area\">\n                        <textarea \n                            className=\"resume-text-input\"\n                            placeholder=\"请在此粘贴您的简历文本...\"\n                            value={resumeText}\n                            onChange={handleTextChange}\n                        ></textarea>\n                    </div>\n                </div>\n                \n                {/* 中间按钮区域 */}\n                <div className=\"action-section\">\n                    <button \n                        className=\"submit-button\"\n                        onClick={handleTextOutput}\n                        disabled={isModifying || !resumeText.trim()}\n                    >\n                        {isModifying ? '修改中...' : '开始修改'}\n                    </button>\n                    \n                    <button \n                        className=\"history-button\" \n                        onClick={onViewHistory}\n                    >\n                        查看历史\n                    </button>\n                </div>\n                \n                {/* 右侧结果区域 */}\n                <div className=\"output-section\">\n                    <h3 className=\"section-title\">修改后的简历</h3>\n                    \n                    {/* 错误提示消息 */}\n                    {error && (\n                        <div className=\"error-message\">\n                            <span className=\"error-icon\">❌</span> {error}\n                        </div>\n                    )}\n                    \n                    {/* 成功提示消息 */}\n                    {success && (\n                        <div className=\"success-message\">\n                            <span className=\"success-icon\">✓</span> {success}\n                            {isSaving && <span className=\"saving-indicator\"> (保存中...)</span>}\n                        </div>\n                    )}\n                    \n                    {/* 分类状态提示 */}\n                    {classifyingStatus && (\n                        <div className=\"classifying-status\">\n                            <span className=\"classifying-icon\">⏳</span> {classifyingStatus}\n                        </div>\n                    )}\n                    \n                    <div className=\"text-output-area\">\n                        <textarea \n                            className=\"resume-text-output\"\n                            placeholder=\"修改后的简历将显示在这里\"\n                            value={modifiedResume}\n                            readOnly\n                        ></textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResumeUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}