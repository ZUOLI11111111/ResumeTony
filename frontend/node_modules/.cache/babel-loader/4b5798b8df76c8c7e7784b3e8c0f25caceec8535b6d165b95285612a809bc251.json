{"ast":null,"code":"var _jsxFileName = \"/home/m/resume_revision/frontend/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ResumeUpload.css';\n\n// 创建支持大数据的axios实例\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  timeout: 30000,\n  // 增加超时时间到30秒\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  maxContentLength: Infinity,\n  // 允许无限大小的内容\n  maxBodyLength: Infinity // 允许无限大小的请求体\n});\nfunction ResumeUpload({\n  languages,\n  apiUrl,\n  onViewHistory\n}) {\n  _s();\n  const [resumeText, setResumeText] = useState('');\n  const [modificationRequirements, setModificationRequirements] = useState('');\n  const [modifiedResume, setModifiedResume] = useState('');\n  const [isModifying, setIsModifying] = useState(false);\n  const [sourceLanguage, setSourceLanguage] = useState('中文');\n  const [targetLanguage, setTargetLanguage] = useState('中文');\n  const [success, setSuccess] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const [classifyingStatus, setClassifyingStatus] = useState(''); // 添加分类状态变量\n\n  const handleTextChange = e => {\n    setResumeText(e.target.value);\n  };\n  const handleRequirementsChange = e => {\n    setModificationRequirements(e.target.value);\n  };\n  async function handleTextOutput() {\n    setIsModifying(true);\n    setModifiedResume(\"\"); // 清空之前的结果\n    setSuccess(\"\"); // 清空成功消息\n    setClassifyingStatus(\"\");\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 6000000); // 60秒超时\n\n      const response = await fetch(`${apiUrl}/api/modify_resume`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          resume_text: resumeText,\n          requirements: modificationRequirements,\n          source_language: sourceLanguage,\n          target_language: targetLanguage\n        }),\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(\"服务器响应错误\");\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      setClassifyingStatus(\"正在分析简历类型...\");\n      let reconnectAttempts = 0;\n      const maxReconnectAttempts = 3;\n\n      // 添加自动重试函数\n      const processStreamWithRetry = async () => {\n        try {\n          while (true) {\n            try {\n              const {\n                done,\n                value\n              } = await reader.read();\n              if (done) {\n                console.log(\"流读取完成\");\n                break;\n              }\n\n              // 连接成功，重置重试计数\n              reconnectAttempts = 0;\n              const text = decoder.decode(value);\n              console.log(\"收到的原始数据:\", text);\n              const lines = text.split('\\n');\n              for (const line of lines) {\n                if (line.trim().startsWith('data:')) {\n                  try {\n                    const jsonStr = line.substring(5).trim();\n                    console.log(\"解析前的JSON:\", jsonStr);\n                    const data = JSON.parse(jsonStr);\n                    if (data.type === 'start') {\n                      // 开始处理，设置语言信息\n                      setSourceLanguage(data.sourceLanguage || '中文');\n                      setTargetLanguage(data.targetLanguage || '中文');\n                      setClassifyingStatus(\"正在分析简历类型...\");\n                    } else if (data.type === 'update') {\n                      if (data.text) {\n                        setModifiedResume(data.text);\n                      }\n                    } else if (data.type === 'end1') {\n                      setClassifyingStatus(\"简历分类完成，开始具体分类...\");\n                      setModifiedResume(data.text);\n                    } else if (data.type === 'end12') {\n                      setClassifyingStatus(\"具体分类完成，开始修改...\");\n                      setModifiedResume(data.text);\n                    } else if (data.type === 'end2') {\n                      setClassifyingStatus(\"简历修改完成，正在优化格式...\");\n                      setModifiedResume(data.text);\n                    } else if (data.type === 'end3') {\n                      setClassifyingStatus(\"\");\n                      setSuccess(\"简历修改成功！\");\n                      setModifiedResume(data.text);\n                    } else if (data.type === 'error') {\n                      console.error(\"服务器返回错误:\", data.text);\n                      setClassifyingStatus(`服务器错误: ${data.text}`);\n                    }\n                  } catch (error) {\n                    console.error(\"解析服务器响应出错:\", error, line);\n                    setClassifyingStatus(`解析响应出错: ${error.message}`);\n                  }\n                }\n              }\n            } catch (error) {\n              console.error(\"读取流出错:\", error);\n              reconnectAttempts++;\n              if (reconnectAttempts <= maxReconnectAttempts) {\n                setClassifyingStatus(`连接中断，正在尝试重新连接 (${reconnectAttempts}/${maxReconnectAttempts})...`);\n                // 暂停后重试\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                continue;\n              } else {\n                setClassifyingStatus(`连接失败，请检查网络连接后重试`);\n                throw error;\n              }\n            }\n          }\n        } catch (error) {\n          console.error(\"处理流失败:\", error);\n          throw error;\n        }\n      };\n\n      // 执行带重试的流处理\n      await processStreamWithRetry();\n    } catch (error) {\n      console.error(\"请求失败:\", error);\n      if (error.name === 'AbortError') {\n        setModifiedResume(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n      } else if (error.message === 'Failed to fetch' || error.message.includes('network')) {\n        setModifiedResume(\"网络连接错误。请确认Python后端服务(端口5000)已启动并且可访问。\");\n      } else {\n        setModifiedResume(\"修改过程中出现错误：\" + error.message);\n      }\n      setClassifyingStatus(\"\");\n    } finally {\n      setIsModifying(false);\n    }\n  }\n\n  // 保存结果到数据库\n  const saveResultToDatabase = async (originalContent, modifiedContent, description) => {\n    try {\n      setIsSaving(true);\n      console.log('开始保存简历修改结果到数据库...');\n      console.log('原始内容长度:', originalContent.length);\n      console.log('修改后内容长度:', modifiedContent.length);\n      const response = await api.post('/resume', {\n        originalContent: originalContent,\n        modifiedContent: modifiedContent,\n        modificationDescription: description || '',\n        userId: 'user123',\n        // 可以从用户登录信息中获取\n        status: 1 // 1表示已完成\n      });\n      console.log('保存响应:', response);\n      if (response.data && response.data.success) {\n        setSuccess(prev => prev + \" 已保存到历史记录！\");\n        console.log('保存成功，ID:', response.data.data.id);\n      } else {\n        console.error('保存失败:', response.data);\n      }\n    } catch (error) {\n      console.error('保存到数据库出错:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resume-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"\\u539F\\u59CB\\u7B80\\u5386\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-right-language-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: sourceLanguage,\n              onChange: e => setSourceLanguage(e.target.value),\n              className: \"language-select-corner\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u4E2D\\u6587\",\n                children: \"\\u4E2D\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), Object.entries(languages).filter(([k]) => k !== '中文').map(([k, v]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: k,\n                children: v\n              }, `source-${k}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: targetLanguage,\n              onChange: e => setTargetLanguage(e.target.value),\n              className: \"language-select-corner\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u4E2D\\u6587\",\n                children: \"\\u4E2D\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), Object.entries(languages).filter(([k]) => k !== '中文').map(([k, v]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: k,\n                children: v\n              }, `target-${k}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requirements-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"modification-requirements\",\n            className: \"requirements-label\",\n            children: \"\\u4FEE\\u6539\\u8981\\u6C42\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"modification-requirements\",\n            className: \"requirements-input\",\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u60A8\\u5BF9\\u7B80\\u5386\\u4FEE\\u6539\\u7684\\u5177\\u4F53\\u8981\\u6C42...\",\n            value: modificationRequirements,\n            onChange: handleRequirementsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input-area\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"resume-text-input\",\n            placeholder: \"\\u8BF7\\u5728\\u6B64\\u7C98\\u8D34\\u60A8\\u7684\\u7B80\\u5386\\u6587\\u672C...\",\n            value: resumeText,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleTextOutput,\n          disabled: isModifying || !resumeText.trim(),\n          children: isModifying ? '修改中...' : '开始修改'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"history-button\",\n          onClick: onViewHistory,\n          children: \"\\u67E5\\u770B\\u5386\\u53F2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\u4FEE\\u6539\\u540E\\u7684\\u7B80\\u5386\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-icon\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), \" \", success, isSaving && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"saving-indicator\",\n            children: \" (\\u4FDD\\u5B58\\u4E2D...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), classifyingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classifying-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"classifying-icon\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), \" \", classifyingStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-output-area\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"resume-text-output\",\n            placeholder: \"\\u4FEE\\u6539\\u540E\\u7684\\u7B80\\u5386\\u5C06\\u663E\\u793A\\u5728\\u8FD9\\u91CC\",\n            value: modifiedResume,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n_s(ResumeUpload, \"ZBIhTHUHbIqmgV+eXkKk9Y+Gvgk=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","api","create","baseURL","timeout","headers","maxContentLength","Infinity","maxBodyLength","ResumeUpload","languages","apiUrl","onViewHistory","_s","resumeText","setResumeText","modificationRequirements","setModificationRequirements","modifiedResume","setModifiedResume","isModifying","setIsModifying","sourceLanguage","setSourceLanguage","targetLanguage","setTargetLanguage","success","setSuccess","isSaving","setIsSaving","classifyingStatus","setClassifyingStatus","handleTextChange","e","target","value","handleRequirementsChange","handleTextOutput","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","body","JSON","stringify","resume_text","requirements","source_language","target_language","signal","clearTimeout","ok","Error","reader","getReader","decoder","TextDecoder","reconnectAttempts","maxReconnectAttempts","processStreamWithRetry","done","read","console","log","text","decode","lines","split","line","trim","startsWith","jsonStr","substring","data","parse","type","error","message","Promise","resolve","name","includes","saveResultToDatabase","originalContent","modifiedContent","description","length","post","modificationDescription","userId","status","prev","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","entries","filter","k","map","v","htmlFor","placeholder","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["/home/m/resume_revision/frontend/src/components/ResumeUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './ResumeUpload.css';\n\n// 创建支持大数据的axios实例\nconst api = axios.create({\n    baseURL: 'http://localhost:8080/api',\n    timeout: 30000, // 增加超时时间到30秒\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    maxContentLength: Infinity, // 允许无限大小的内容\n    maxBodyLength: Infinity // 允许无限大小的请求体\n});\n\nfunction ResumeUpload({ languages, apiUrl, onViewHistory }) {\n    const [resumeText, setResumeText] = useState('');\n    const [modificationRequirements, setModificationRequirements] = useState('');\n    const [modifiedResume, setModifiedResume] = useState('');\n    const [isModifying, setIsModifying] = useState(false);\n    const [sourceLanguage, setSourceLanguage] = useState('中文');\n    const [targetLanguage, setTargetLanguage] = useState('中文');\n    const [success, setSuccess] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n    const [classifyingStatus, setClassifyingStatus] = useState(''); // 添加分类状态变量\n    \n    const handleTextChange = (e) => {\n        setResumeText(e.target.value);\n    };\n    \n    const handleRequirementsChange = (e) => {\n        setModificationRequirements(e.target.value);\n    };\n    \n    async function handleTextOutput() {\n        setIsModifying(true);\n        setModifiedResume(\"\"); // 清空之前的结果\n        setSuccess(\"\"); // 清空成功消息\n        setClassifyingStatus(\"\"); \n        try {\n            const controller = new AbortController();\n            const timeoutId = setTimeout(() => controller.abort(), 6000000); // 60秒超时\n            \n            const response = await fetch(`${apiUrl}/api/modify_resume`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    resume_text: resumeText,\n                    requirements: modificationRequirements,\n                    source_language: sourceLanguage,\n                    target_language: targetLanguage\n                }),\n                signal: controller.signal\n            });\n            \n            clearTimeout(timeoutId);\n            \n            if (!response.ok) {\n                throw new Error(\"服务器响应错误\");\n            }\n            \n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            \n            setClassifyingStatus(\"正在分析简历类型...\");\n            \n            let reconnectAttempts = 0;\n            const maxReconnectAttempts = 3;\n            \n            // 添加自动重试函数\n            const processStreamWithRetry = async () => {\n                try {\n                    while (true) {\n                        try {\n                            const { done, value } = await reader.read();\n                            if (done) {\n                                console.log(\"流读取完成\");\n                                break;\n                            }\n                            \n                            // 连接成功，重置重试计数\n                            reconnectAttempts = 0;\n                            \n                            const text = decoder.decode(value);\n                            console.log(\"收到的原始数据:\", text);\n                            \n                            const lines = text.split('\\n');\n                            for (const line of lines) {\n                                if (line.trim().startsWith('data:')) {\n                                    try {\n                                        const jsonStr = line.substring(5).trim();\n                                        console.log(\"解析前的JSON:\", jsonStr);\n                                        const data = JSON.parse(jsonStr);\n                                        \n                                        if (data.type === 'start') {\n                                            // 开始处理，设置语言信息\n                                            setSourceLanguage(data.sourceLanguage || '中文');\n                                            setTargetLanguage(data.targetLanguage || '中文');\n                                            setClassifyingStatus(\"正在分析简历类型...\");\n                                        } else if (data.type === 'update') {\n                                            if (data.text) {\n                                                setModifiedResume(data.text);\n                                            }\n                                        } else if (data.type === 'end1') {\n                                            setClassifyingStatus(\"简历分类完成，开始具体分类...\");\n                                            setModifiedResume(data.text);\n                                        } else if (data.type === 'end12') {\n                                            setClassifyingStatus(\"具体分类完成，开始修改...\");\n                                            setModifiedResume(data.text);\n                                        } else if (data.type === 'end2') {\n                                            setClassifyingStatus(\"简历修改完成，正在优化格式...\");\n                                            setModifiedResume(data.text);\n                                        } else if (data.type === 'end3') {\n                                            setClassifyingStatus(\"\");\n                                            setSuccess(\"简历修改成功！\");\n                                            setModifiedResume(data.text);\n                                        } else if (data.type === 'error') {\n                                            console.error(\"服务器返回错误:\", data.text);\n                                            setClassifyingStatus(`服务器错误: ${data.text}`);\n                                        }\n                                    } catch (error) {\n                                        console.error(\"解析服务器响应出错:\", error, line);\n                                        setClassifyingStatus(`解析响应出错: ${error.message}`);\n                                    }\n                                }\n                            }\n                        } catch (error) {\n                            console.error(\"读取流出错:\", error);\n                            reconnectAttempts++;\n                            \n                            if (reconnectAttempts <= maxReconnectAttempts) {\n                                setClassifyingStatus(`连接中断，正在尝试重新连接 (${reconnectAttempts}/${maxReconnectAttempts})...`);\n                                // 暂停后重试\n                                await new Promise(resolve => setTimeout(resolve, 1000));\n                                continue;\n                            } else {\n                                setClassifyingStatus(`连接失败，请检查网络连接后重试`);\n                                throw error;\n                            }\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"处理流失败:\", error);\n                    throw error;\n                }\n            };\n            \n            // 执行带重试的流处理\n            await processStreamWithRetry();\n        } catch (error) {\n            console.error(\"请求失败:\", error);\n            if (error.name === 'AbortError') {\n                setModifiedResume(\"请求超时，可能是后端服务处理时间过长。请尝试简化简历内容或使用更简单的要求。\");\n            } else if (error.message === 'Failed to fetch' || error.message.includes('network')) {\n                setModifiedResume(\"网络连接错误。请确认Python后端服务(端口5000)已启动并且可访问。\");\n            } else {\n                setModifiedResume(\"修改过程中出现错误：\" + error.message);\n            }\n            setClassifyingStatus(\"\");\n        } finally {\n            setIsModifying(false);\n        }\n    }\n\n    // 保存结果到数据库\n    const saveResultToDatabase = async (originalContent, modifiedContent, description) => {\n        try {\n            setIsSaving(true);\n            console.log('开始保存简历修改结果到数据库...');\n            console.log('原始内容长度:', originalContent.length);\n            console.log('修改后内容长度:', modifiedContent.length);\n            \n            const response = await api.post('/resume', {\n                originalContent: originalContent,\n                modifiedContent: modifiedContent,\n                modificationDescription: description || '',\n                userId: 'user123', // 可以从用户登录信息中获取\n                status: 1 // 1表示已完成\n            });\n            \n            console.log('保存响应:', response);\n            \n            if (response.data && response.data.success) {\n                setSuccess(prev => prev + \" 已保存到历史记录！\");\n                console.log('保存成功，ID:', response.data.data.id);\n            } else {\n                console.error('保存失败:', response.data);\n            }\n        } catch (error) {\n            console.error('保存到数据库出错:', error);\n        } finally {\n            setIsSaving(false);\n        }\n    };\n    \n    return (\n        <div className=\"resume-upload\">\n            <div className=\"split-container\">\n                {/* 左侧输入区域 */}\n                <div className=\"input-section\">\n                    {/* 添加相对定位容器 */}\n                    <div className=\"section-header\">\n                        <h3 className=\"section-title\">原始简历</h3>\n                        \n                        {/* 右上角语言选择器和转换箭头 */}\n                        <div className=\"top-right-language-selector\">\n                            {/* 源语言选择器 */}\n                            <select \n                                value={sourceLanguage} \n                                onChange={(e) => setSourceLanguage(e.target.value)}\n                                className=\"language-select-corner\"\n                            >\n                                <option value=\"中文\">中文</option>\n                                {Object.entries(languages)\n                                    .filter(([k]) => k !== '中文')\n                                    .map(([k, v]) => (\n                                        <option key={`source-${k}`} value={k}>{v}</option>\n                                    ))\n                                }\n                            </select>\n                            \n                            {/* 转换箭头 */}\n                            <div className=\"language-arrow\">→</div>\n                            \n                            {/* 目标语言选择器 */}\n                            <select \n                                value={targetLanguage} \n                                onChange={(e) => setTargetLanguage(e.target.value)}\n                                className=\"language-select-corner\"\n                            >\n                                <option value=\"中文\">中文</option>\n                                {Object.entries(languages)\n                                    .filter(([k]) => k !== '中文')\n                                    .map(([k, v]) => (\n                                        <option key={`target-${k}`} value={k}>{v}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    \n                    {/* 修改要求输入框 */}\n                    <div className=\"requirements-container\">\n                        <label htmlFor=\"modification-requirements\" className=\"requirements-label\">修改要求：</label>\n                        <textarea \n                            id=\"modification-requirements\"\n                            className=\"requirements-input\"\n                            placeholder=\"请输入您对简历修改的具体要求...\"\n                            value={modificationRequirements}\n                            onChange={handleRequirementsChange}\n                        ></textarea>\n                    </div>\n                    \n                    <div className=\"text-input-area\">\n                        <textarea \n                            className=\"resume-text-input\"\n                            placeholder=\"请在此粘贴您的简历文本...\"\n                            value={resumeText}\n                            onChange={handleTextChange}\n                        ></textarea>\n                    </div>\n                </div>\n                \n                {/* 中间按钮区域 */}\n                <div className=\"action-section\">\n                    <button \n                        className=\"submit-button\"\n                        onClick={handleTextOutput}\n                        disabled={isModifying || !resumeText.trim()}\n                    >\n                        {isModifying ? '修改中...' : '开始修改'}\n                    </button>\n                    \n                    <button \n                        className=\"history-button\" \n                        onClick={onViewHistory}\n                    >\n                        查看历史\n                    </button>\n                </div>\n                \n                {/* 右侧结果区域 */}\n                <div className=\"output-section\">\n                    <h3 className=\"section-title\">修改后的简历</h3>\n                    \n                    {/* 成功提示消息 */}\n                    {success && (\n                        <div className=\"success-message\">\n                            <span className=\"success-icon\">✓</span> {success}\n                            {isSaving && <span className=\"saving-indicator\"> (保存中...)</span>}\n                        </div>\n                    )}\n                    \n                    {/* 分类状态提示 */}\n                    {classifyingStatus && (\n                        <div className=\"classifying-status\">\n                            <span className=\"classifying-icon\">⏳</span> {classifyingStatus}\n                        </div>\n                    )}\n                    \n                    <div className=\"text-output-area\">\n                        <textarea \n                            className=\"resume-text-output\"\n                            placeholder=\"修改后的简历将显示在这里\"\n                            value={modifiedResume}\n                            readOnly\n                        ></textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResumeUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}